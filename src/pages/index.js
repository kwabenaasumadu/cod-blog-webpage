import React, { useEffect, useState } from "react";
import { useRef } from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import FacebookIcon from "@mui/icons-material/Facebook";
import LinkedInIcon from "@mui/icons-material/LinkedIn";
import TwitterIcon from "@mui/icons-material/Twitter";
import InstagramIcon from "@mui/icons-material/Instagram";
import EmailIcon from "@mui/icons-material/Email";
import LoginIcon from "@mui/icons-material/Login";
import LogoutIcon from "@mui/icons-material/Logout";
import AddBoxIcon from "@mui/icons-material/AddBox";
import CallIcon from "@mui/icons-material/Call";
import { LocalActivityRounded } from "@mui/icons-material";
import UserCommentComp from "./userComment";
import "firebase/database";
import firebase from "./firebase";
import { db, analytics } from "./firebase";
import { push, ref } from "firebase/database";
import { getDatabase, get } from "firebase/database";
import Dialog from "@mui/material/Dialog";
import DialogTitle from "@mui/material/DialogTitle";
import DialogContent from "@mui/material/DialogContent";
import DialogContentText from "@mui/material/DialogContentText";
import DialogActions from "@mui/material/DialogActions";
import Button from "@mui/material/Button";

export default function Home() {
  const [text, setText] = useState("");
  const introText = "Welcome To Code with COD";
  const typingForward = useRef(true);

  const [allQuestions, setAllQuestions] = useState([]);
  const [selectedQuestionResponse, setSelectedQuestionResponse] = useState("");
  const [isDialogOpen, setIsDialogOpen] = useState(false);

  const [questionsData, setQuestionsData] = useState({
    questionTitle: "",
    questionResponseText: "",
  });

  useEffect(() => {
    let currentIndex = 2;
    const typingInterval = setInterval(() => {
      if (typingForward.current) {
        if (currentIndex <= introText.length) {
          setText(introText.slice(0, currentIndex));
          currentIndex++;
        } else {
          typingForward.current = false;
          currentIndex = introText.length;
        }
      } else {
        if (currentIndex >= 0) {
          setText(introText.slice(0, currentIndex));
          currentIndex--;
        } else {
          typingForward.current = true;
          currentIndex = 0;
        }
      }
    }, 100);

    return () => {
      clearInterval(typingInterval);
    };
  }, [introText]);

  const handleQuestionSubmit = async (e) => {
    e.preventDefault();
    try {
      await push(ref(db, "allQuestions"), questionsData);
      setQuestionsData({
        questionTitle: "",
        questionResponseText: "",
      });
      console.log("Form submitted successfully");
    } catch (error) {
      console.error("Error submitting comment", error);
    }
  };

  const handleInputChangeInSubmitQue = (e) => {
    const { name, value } = e.target;
    if (name === "questionTitle" || name === "questionResponseText") {
      setQuestionsData({ ...questionsData, [name]: value });
    }
  };

  useEffect(() => {
    const fetchData = async () => {
      try {
        const dbRef = getDatabase();
        const response = await get(ref(dbRef, "allQuestions"));
        const data = response.val();

        if (data && typeof data === "object") {
          const dataArray = Object.values(data);
          setAllQuestions(dataArray);
        } else {
          setAllQuestions([]);
        }
      } catch (error) {
        console.error("Error fetching data:", error);
        setAllQuestions([]);
      }
    };
    fetchData();
  }, []);

  return (
    <>
      <Head>
        <title>Learn JavaScript with COD</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/codLogo.jpg" />
      </Head>
      {/* <div className={styles.feedBack}>
        <div className={styles.header}>
          <h1>Post Your Comment</h1>
        </div>
        <div className={styles.form}>
          <form onSubmit={handleQuestionSubmit}>
            <div className={styles.inputFields}>
              <div className={styles.fieldOne}>
                <label htmlFor="UserName">Your Name</label>
                <input
                  type="text"
                  id="questionTitle"
                  name="questionTitle"
                  value={questionsData.UserName}
                  onChange={handleInputChangeInSubmitQue}
                  placeholder="Enter your questionTitle"
                />
              </div>

              <div className={styles.fieldTwo}>
                <label htmlFor="UserMessage">Your Message</label>
                <textarea
                  id="questionResponseText"
                  name="questionResponseText"
                  value={questionsData.UserMessage}
                  onChange={handleInputChangeInSubmitQue}
                  placeholder="Enter your questionResponseText"
                  rows="4"
                />
              </div>

              <div className={styles.submitBtn}>
                <button type="submit">Submit</button>
              </div>
            </div>
          </form>
        </div>
      </div> */}

      <main className={styles.main}>
        <div className={styles.navBarContainer}>
          <h1>{text}</h1>
          <div className={styles.navBarIcons}>
            <h1>
              <FacebookIcon />
            </h1>
            <h1>
              <LinkedInIcon />
            </h1>
            <h1>
              <TwitterIcon />
            </h1>
            <h1>
              <InstagramIcon />
            </h1>
            <h1>
              <EmailIcon />
            </h1>
          </div>

          <div className={styles.logInContainer}>
            <span>
              Login <LoginIcon />
            </span>

            <span>
              LogOut <LogoutIcon />
            </span>

            <span>
              SignUp <AddBoxIcon />
            </span>
          </div>
        </div>

        <div className={styles.showcaseLogo}>
          <Image
            className={styles.logo}
            src="/codLogo.jpg"
            alt="cod_logo"
            width={1000}
            height={1000}
          />
        </div>

        <div className={styles.gridContainer}>
          <a href="" className={styles.grid}>
            <h2>Docs</h2>
            <p>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>

          <a href="" className={styles.grid}>
            <h2>Learn</h2>
            <p>
              Learn about Next.js in an interactive course with&nbsp;quizzes!
            </p>
          </a>

          <a href="" className={styles.grid}>
            <h2>Templates</h2>
            <p>
              Discover and deploy boilerplate example Next.js&nbsp;projects.
            </p>
          </a>

          <a href="" className={styles.grid}>
            <h2>Deploy</h2>
            <p>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </a>
        </div>

        <div className={styles.headerAskQuestion}>
          <h1>What are you looking for</h1>
        </div>
        <div className={styles.searchQuestionsContainer}>
          <div className={styles.searchBar}>
            <input placeholder="search for your question" />
          </div>
          <div className={styles.listQuestions}>
            <ul>
              {allQuestions.map((question, index) => (
                <li
                  key={index}
                  onClick={() => {
                    setSelectedQuestionResponse(question.questionResponseText);
                    setIsDialogOpen(true);
                  }}
                >
                  {question.questionTitle}
                </li>
              ))}
            </ul>
          </div>
        </div>

        <UserCommentComp />

        <div className={styles.footer}>
          <div className={styles.itemsFooter}>
            <div className={styles.firstItem}>
              <h1>Code With COD</h1>
            </div>
            <div className={styles.footerLinks1}>
              <ul>
                <li>
                  <CallIcon /> <span>+233 597063145</span>
                </li>
                <li>
                  <EmailIcon />
                  <span>kwabenasakyi450@gmail.com</span>
                </li>
                <li>
                  <LocalActivityRounded />
                  <span>Kumasi - Ashanti, Ghana</span>
                </li>
              </ul>
            </div>
            <div className={styles.footerLinks}>
              <ul>
                <li>Link1</li>
                <li>Link2</li>
                <li>Link3</li>
              </ul>
            </div>

            <div className={styles.lastItems}>
              <h1>
                <FacebookIcon />
              </h1>
              <h1>
                <LinkedInIcon />
              </h1>
              <h1>
                <TwitterIcon />
              </h1>
              <h1>
                <InstagramIcon />
              </h1>
              <h1>
                <EmailIcon />
              </h1>
            </div>
          </div>

          <div className={styles.bottomFooter}>
            <h1>Cpoy right 20203 code with cod</h1>
          </div>
        </div>
        <Dialog open={isDialogOpen} onClose={() => setIsDialogOpen(false)}>
          <DialogTitle></DialogTitle>
          <DialogContent>
            <DialogContentText>{selectedQuestionResponse}</DialogContentText>
          </DialogContent>
          <DialogActions>
            <Button onClick={() => setIsDialogOpen(false)} color="primary">
              Close
            </Button>
          </DialogActions>
        </Dialog>
      </main>
    </>
  );
}
